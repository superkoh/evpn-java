buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
        classpath("org.mybatis.generator:mybatis-generator-core:1.3.2")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'evpn-service'
    version =  '1.0.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web:1.3.3.RELEASE')
    compile('mysql:mysql-connector-java:5.1.38')
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.0.2')
    compile('org.springframework.boot:spring-boot-starter-aop:1.3.3.RELEASE')
    compile('commons-codec:commons-codec:1.10')
    testCompile('org.springframework.boot:spring-boot-starter-test:1.3.3.RELEASE')
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

task mybatisGenerator(type: MybatisGeneratorTask) {
}

import org.mybatis.generator.api.MyBatisGenerator;
import org.mybatis.generator.config.Configuration;
import org.mybatis.generator.config.xml.ConfigurationParser;
import org.mybatis.generator.internal.DefaultShellCallback;

class MybatisGeneratorTask extends DefaultTask {

    @TaskAction
    public void run() {
        List<String> warnings = new ArrayList<String>();
        boolean overwrite = true;
        File configFile = new File("/Users/KOH/Sites/evpn-java/src/main/resources/mybatis/generateMybatis.xml");
        ConfigurationParser cp = new ConfigurationParser(warnings);
        Configuration config = cp.parseConfiguration(configFile);
        DefaultShellCallback callback = new DefaultShellCallback(overwrite);
        MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);
        myBatisGenerator.generate(null);
    }
}