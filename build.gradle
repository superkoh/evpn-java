buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
        classpath("org.mybatis.generator:mybatis-generator-core:1.3.2")
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'org.asciidoctor.convert'

jar {
    baseName = 'evpn'
    version =  'release'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('mysql:mysql-connector-java:5.1.38')
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('commons-codec:commons-codec:1.10')
    compile('commons-io:commons-io:2.5')
    compile('com.zaxxer:HikariCP:2.4.6')
    compile('ch.qos.logback:logback-classic:1.1.7')
    compile('redis.clients:jedis:2.8.1')
    compile('org.apache.commons:commons-lang3:3.4')
    compile('com.github.bingoohuang:patchca:0.0.1')
//    compile "io.springfox:springfox-swagger2:2.4.0"
//    compile 'io.springfox:springfox-swagger-ui:2.4.0'
    compile 'io.springfox:springfox-swagger2:2.4.0'
    testCompile 'io.springfox:springfox-staticdocs:2.4.0'
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

task mybatisGenerator(type: MybatisGeneratorTask) {
}

import org.mybatis.generator.api.MyBatisGenerator;
import org.mybatis.generator.config.Configuration;
import org.mybatis.generator.config.xml.ConfigurationParser;
import org.mybatis.generator.internal.DefaultShellCallback;

class MybatisGeneratorTask extends DefaultTask {

    @TaskAction
    public void run() {
        List<String> warnings = new ArrayList<String>();
        boolean overwrite = true;

        File configFile = new File("/Users/KOH/Sites/evpn-java/src/main/resources/mybatis/radiusGenerator.xml");
        ConfigurationParser cp = new ConfigurationParser(warnings);
        Configuration config = cp.parseConfiguration(configFile);
        DefaultShellCallback callback = new DefaultShellCallback(overwrite);
        MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);
        myBatisGenerator.generate(null);

        configFile = new File("/Users/KOH/Sites/evpn-java/src/main/resources/mybatis/evpnGenerator.xml");
        cp = new ConfigurationParser(warnings);
        config = cp.parseConfiguration(configFile);
        callback = new DefaultShellCallback(overwrite);
        myBatisGenerator = new MyBatisGenerator(config, callback, warnings);
        myBatisGenerator.generate(null);
    }
}

ext {
    generatedAsciidoc = file("/Users/KOH/Sites/evpn-java/src/docs/asciidoc/generated")
}

asciidoctor {
    dependsOn test
    sources {
        include 'index.adoc'
    }
    backends = ['html5', 'pdf']
    attributes = [
            doctype: 'book',
            toc: 'left',
            toclevels: '2',
            numbered: '',
            sectlinks: '',
            sectanchors: '',
            hardbreaks: '',
            generated: generatedAsciidoc
    ]
}